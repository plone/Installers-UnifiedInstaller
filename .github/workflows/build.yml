name: Build and test result

on: [push]

env:
    PLONE_VERSION: "5.2.13"
    INSTALLER_VERSION: "1.0"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Run buildme.sh
      run: |
        WITH_PYTHON=`which python` ./buildme.sh ~/dist
    - name: Upload Plone Installer from build
      uses: actions/upload-artifact@v2
      with:
        name: Plone-Unified-Installer
        path: ~/dist/Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }}.*
  # test-ubuntu-27:
  #   needs: build
  #   strategy:
  #     matrix:
  #       python-version:
  #       - "2.7"
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: python:2.7.18-buster
  #   steps:
  #   - name: Download Plone-Installer
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: Plone-Unified-Installer
  #   - name: Display structure of downloaded files
  #     run: ls -R
  #   - name: Test Installer
  #     shell: bash
  #     run: |
  #       tar xzf Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }}.tgz
  #       mv Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }} ../installer
  #       cd ..
  #       mkdir tmp
  #       ls -la
  #       cd installer/tests
  #       WITH_TEMP="../../tmp" WITH_PYTHON="`which python`" python testall.py
  # It fails here with: 'sudo utility is required to do a server-mode install.'
  test-ubuntu-38:
    needs: build
    strategy:
      matrix:
        python-version:
        - "3.8"
    runs-on: ubuntu-20.04
    steps:
    - name: Installs on Linux
      run: |
        sudo apt install libxml2-dev libxslt1-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download Plone-Installer
      uses: actions/download-artifact@v2
      with:
        name: Plone-Unified-Installer
    - name: Display structure of downloaded files
      run: ls -R
    - name: Test Installer
      shell: bash
      run: |
        tar xzf Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }}.tgz
        mv Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }} ../installer
        cd ..
        mkdir tmp
        ls -la
        cd installer/tests
        WITH_TEMP="../../tmp" WITH_PYTHON="`which python`" python testall.py
  test-macos:
    needs: build
    strategy:
      matrix:
        python-version:
        # by intent no support for Python 2.7
        - "3.8"
    runs-on: macos-11
    steps:
    - name: Installs on Macos
      run: |
        brew install libxml2 libxslt
    - name: Increase WAIT for Service on macos
      run: |
        echo PLONE_SERVER_START_WAIT="120" >> $GITHUB_ENV
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download Plone-Installer
      uses: actions/download-artifact@v2
      with:
        name: Plone-Unified-Installer
    - name: Display structure of downloaded files
      run: ls -R
    - name: Test Installer
      shell: bash
      run: |
        tar xzf Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }}.tgz
        mv Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }} ../installer
        cd ..
        mkdir tmp
        ls -la
        cd installer/tests
        WITH_TEMP="../../tmp" WITH_PYTHON="`which python`" python testall.py

  test-windows:
    needs: build
    strategy:
      matrix:
        python-version:
        # by intent no support for Python 2.7
        - "3.8"
    runs-on: windows-2019
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download Plone-Installer
      uses: actions/download-artifact@v2
      with:
        name: Plone-Unified-Installer
    - name: Display structure of downloaded files
      run: dir
    - name: Extract Tar
      run: |
        tar.exe xzf Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }}.tgz
        move Plone-${{ env.PLONE_VERSION }}-UnifiedInstaller-${{ env.INSTALLER_VERSION }} ..\installer
    - name: Run tests
      run: |
        cd ..
        mkdir tmp
        cd installer\tests
        dir
        setx WITH_TEMP "..\..\tmp"
        python testall.py
